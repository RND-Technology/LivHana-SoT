# LivHana-SoT: Complete Sovereign AI Agent Swarm
# Orchestrates API container with llama.cpp server

version: '3.8'

services:
  # llama.cpp server for local LLM inference
  llama-server:
    image: ghcr.io/ggerganov/llama.cpp:server
    container_name: livhana-llama-server
    ports:
      - "8080:8080"
    volumes:
      - ./models:/models:ro
    environment:
      - MODEL_PATH=/models/deepseek-coder-33b-instruct.gguf
      - HOST=0.0.0.0
      - PORT=8080
      - N_THREADS=8
      - N_GPU_LAYERS=0  # Set to >0 if GPU available
    command: --model /models/deepseek-coder-33b-instruct.gguf --host 0.0.0.0 --port 8080 --n-threads 8
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # LivHana AI Agent Swarm API
  livhana-api:
    build: .
    container_name: livhana-api
    ports:
      - "8000:8000"
    depends_on:
      llama-server:
        condition: service_healthy
    environment:
      - LLM_BASE_URL=http://llama-server:8080/v1
      - METRICS_PORT=8000
      - LIVHANA_ENV=production
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: livhana-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: livhana-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=livhana2024
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: livhana-network
