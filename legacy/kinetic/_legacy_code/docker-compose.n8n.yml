version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: livhana-n8n-orchestrator
    restart: unless-stopped
    ports:
      - "5678:5678"  # Main n8n interface
      - "5679:5679"  # Health check port
    environment:
      # Load all credentials from the .env file
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL}

      # Database Configuration
      - DB_TYPE=${DB_TYPE}
      - DB_POSTGRESDB=${DB_POSTGRESDB}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

      # Security & Authentication
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_JWT_SECRET=${N8N_JWT_SECRET}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}

      # Workflow Configuration
      - N8N_DEFAULT_NAME=${N8N_DEFAULT_NAME}
      - N8N_TIMEZONE=${N8N_TIMEZONE}
      - N8N_WORKFLOW_CALLER_POLICY=${N8N_WORKFLOW_CALLER_POLICY}

      # External Service Integrations
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - ELEVENLABS_BASE_URL=${ELEVENLABS_BASE_URL}
      - ELEVENLABS_VOICE_ID=${ELEVENLABS_VOICE_ID}

      - LUMA_API_KEY=${LUMA_API_KEY}
      - LUMA_BASE_URL=${LUMA_BASE_URL}

      - RUNWAY_API_KEY=${RUNWAY_API_KEY}
      - RUNWAY_BASE_URL=${RUNWAY_BASE_URL}

      - SUNO_WRAPPER_URL=${SUNO_WRAPPER_URL}
      - SUNO_CAPTCHA_API_KEY=${SUNO_CAPTCHA_API_KEY}

      - REPLICATE_API_KEY=${REPLICATE_API_KEY}
      - REPLICATE_BASE_URL=${REPLICATE_BASE_URL}

      - FFMPEG_PATH=${FFMPEG_PATH}
      - FFMPEG_THREADS=${FFMPEG_THREADS}

      - TURN_SERVER_URL=${TURN_SERVER_URL}
      - TURN_USERNAME=${TURN_USERNAME}
      - TURN_PASSWORD=${TURN_PASSWORD}

      # Storage & Media Configuration
      - N8N_STORAGE_PATH=${N8N_STORAGE_PATH}
      - N8N_TEMP_DIR=${N8N_TEMP_DIR}
      - N8N_MAX_FILE_SIZE=${N8N_MAX_FILE_SIZE}

      # Monitoring & Logging
      - N8N_LOG_LEVEL=${N8N_LOG_LEVEL}
      - N8N_LOG_OUTPUT=${N8N_LOG_OUTPUT}
      - N8N_LOG_FILE_MAXSIZE=${N8N_LOG_FILE_MAXSIZE}
      - N8N_LOG_FILE_MAXFILES=${N8N_LOG_FILE_MAXFILES}

      - N8N_HEALTH_CHECK_ACTIVE=${N8N_HEALTH_CHECK_ACTIVE}
      - N8N_HEALTH_CHECK_PORT=${N8N_HEALTH_CHECK_PORT}

      # Performance Tuning
      - N8N_MAX_CONCURRENT_WORKFLOWS=${N8N_MAX_CONCURRENT_WORKFLOWS}
      - N8N_MAX_EXECUTIONS=${N8N_MAX_EXECUTIONS}
      - N8N_EXECUTION_TIMEOUT=${N8N_EXECUTION_TIMEOUT}
      - N8N_WEBHOOK_TIMEOUT=${N8N_WEBHOOK_TIMEOUT}

      - N8N_MEMORY_MAX=${N8N_MEMORY_MAX}
      - N8N_CPU_CORES=${N8N_CPU_CORES}

      # Development Settings
      - N8N_ENV=${N8N_ENV}
      - N8N_DISABLE_UI=${N8N_DISABLE_UI}
      - N8N_DIAGNOSTICS_ENABLED=${N8N_DIAGNOSTICS_ENABLED}

      # Custom Workflow Variables
      - LIVHANA_VIDEO_PIPELINE_ACTIVE=${LIVHANA_VIDEO_PIPELINE_ACTIVE}
      - LIVHANA_MUSIC_GENERATION_ACTIVE=${LIVHANA_MUSIC_GENERATION_ACTIVE}
      - LIVHANA_VOICE_SYNTHESIS_ACTIVE=${LIVHANA_VOICE_SYNTHESIS_ACTIVE}
      - LIVHANA_CARTOON_ANIMATION_ACTIVE=${LIVHANA_CARTOON_ANIMATION_ACTIVE}
      - LIVHANA_DISTRIBUTION_ACTIVE=${LIVHANA_DISTRIBUTION_ACTIVE}

      - LIVHANA_DEFAULT_VIDEO_QUALITY=${LIVHANA_DEFAULT_VIDEO_QUALITY}
      - LIVHANA_DEFAULT_MUSIC_DURATION=${LIVHANA_DEFAULT_MUSIC_DURATION}
      - LIVHANA_DEFAULT_VOICE_MODEL=${LIVHANA_DEFAULT_VOICE_MODEL}

    env_file:
      - n8n_credentials.env

    volumes:
      # Persistent storage for workflows and data
      - ./n8n_data:/app/data
      - ./n8n_storage:/app/n8n_storage
      - ./n8n_temp:/tmp/n8n_temp

      # Mount FFmpeg if available
      - /usr/bin/ffmpeg:/usr/bin/ffmpeg:ro

    networks:
      - livhana-network

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    depends_on:
      - postgres

  postgres:
    image: postgres:15-alpine
    container_name: livhana-n8n-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_POSTGRESDB}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - livhana-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_POSTGRESDB}"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  livhana-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local

