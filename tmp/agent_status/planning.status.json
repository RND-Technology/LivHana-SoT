{
  "agent": "Planning Agent (Layer 1.1.1)",
  "timestamp": "2025-10-23T05:07:00.000Z",
  "task": "ESLint Remediation Plan - backend/integration-service",
  "status": "complete",
  "summary": {
    "total_problems": 17,
    "errors": 13,
    "warnings": 4,
    "affected_files": 3,
    "estimated_effort": "30-45 minutes"
  },
  "task_groups": [
    {
      "group_id": "G1",
      "name": "Unused Variable Cleanup",
      "priority": 1,
      "effort": "5 minutes",
      "complexity": "trivial",
      "problems": [
        {
          "file": "src/pipeline/sync-pipeline.ts",
          "line": 6,
          "rule": "no-unused-vars",
          "message": "'BigQuery' is defined but never used",
          "fix": "Remove unused import of BigQuery from line 6"
        },
        {
          "file": "src/slack/bridge.ts",
          "line": 87,
          "rule": "no-unused-vars",
          "message": "'command' assigned but never used",
          "fix": "Remove destructured 'command' variable or prefix with underscore (_command) if needed for documentation"
        },
        {
          "file": "src/slack/bridge.ts",
          "line": 98,
          "rule": "no-unused-vars",
          "message": "'args' assigned but never used",
          "fix": "Remove destructured 'args' variable or prefix with underscore (_args)"
        }
      ],
      "files": [
        "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/src/pipeline/sync-pipeline.ts",
        "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/src/slack/bridge.ts"
      ],
      "notes": "Simple deletions or renaming. No logic changes required."
    },
    {
      "group_id": "G2",
      "name": "Function Decomposition - Complexity & Line Limits",
      "priority": 2,
      "effort": "15-20 minutes",
      "complexity": "moderate",
      "problems": [
        {
          "file": "src/slack/bridge.ts",
          "line": 37,
          "rule": "max-lines-per-function",
          "message": "Function 'createSlackBridgeRoutes' has 154 lines (max 50)",
          "fix": "Extract helper functions: verifySlackSignature, checkRateLimit, and command handlers into separate functions or modules"
        },
        {
          "file": "src/slack/bridge.ts",
          "line": 79,
          "rule": "max-lines-per-function",
          "message": "Async arrow function has 109 lines (max 50)",
          "fix": "Extract command switch logic into separate handler functions"
        },
        {
          "file": "src/slack/bridge.ts",
          "line": 79,
          "rule": "complexity",
          "message": "Async arrow function complexity 14 (max 10)",
          "fix": "Reduce cyclomatic complexity by extracting switch cases into individual command handler functions"
        }
      ],
      "files": [
        "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/src/slack/bridge.ts"
      ],
      "refactoring_plan": {
        "approach": "Extract to separate modules following PO1",
        "new_files_needed": [
          "src/slack/handlers/command-handlers.ts",
          "src/slack/middleware/slack-verify.ts",
          "src/slack/middleware/rate-limit.ts"
        ],
        "benefits": [
          "Each file has single purpose (PO1)",
          "Testability improved",
          "Complexity reduced",
          "Line limits satisfied"
        ]
      },
      "notes": "Main refactoring effort. Follow PO1 principle - one file per purpose."
    },
    {
      "group_id": "G3",
      "name": "Case Block Lexical Declaration Fixes",
      "priority": 3,
      "effort": "5 minutes",
      "complexity": "trivial",
      "problems": [
        {
          "file": "src/slack/bridge.ts",
          "line": 140,
          "rule": "no-case-declarations",
          "message": "Unexpected lexical declaration in case block",
          "fix": "Wrap case block in curly braces: case 'status': { const health = ...; ... break; }"
        },
        {
          "file": "src/slack/bridge.ts",
          "line": 141,
          "rule": "no-case-declarations",
          "message": "Unexpected lexical declaration in case block",
          "fix": "Same as line 140 - wrap in braces"
        },
        {
          "file": "src/slack/bridge.ts",
          "line": 157,
          "rule": "no-case-declarations",
          "message": "Unexpected lexical declaration in case block",
          "fix": "Wrap case 'logs' block in curly braces"
        }
      ],
      "files": [
        "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/src/slack/bridge.ts"
      ],
      "notes": "Standard ESLint fix. Add block scope to case statements with const/let declarations."
    },
    {
      "group_id": "G4",
      "name": "Type Safety - Remove 'any' Types",
      "priority": 4,
      "effort": "5-10 minutes",
      "complexity": "easy",
      "problems": [
        {
          "file": "tests/properties/lightspeed-bigquery.properties.test.ts",
          "line": 211,
          "rule": "@typescript-eslint/no-explicit-any",
          "message": "Unexpected any. Specify a different type",
          "fix": "Replace 'null as any' with proper type or use type assertion to unknown first"
        },
        {
          "file": "tests/properties/lightspeed-bigquery.properties.test.ts",
          "line": 212,
          "rule": "@typescript-eslint/no-explicit-any",
          "message": "Unexpected any. Specify a different type",
          "fix": "Replace 'undefined as any' with proper type or use unknown"
        }
      ],
      "files": [
        "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/tests/properties/lightspeed-bigquery.properties.test.ts"
      ],
      "notes": "Test file uses 'any' for null/undefined testing. Use 'unknown' or proper type assertions."
    },
    {
      "group_id": "G5",
      "name": "Console Statement Removal - Test Files",
      "priority": 5,
      "effort": "5 minutes",
      "complexity": "trivial",
      "problems": [
        {
          "file": "tests/properties/lightspeed-bigquery.properties.test.ts",
          "line": 11,
          "rule": "no-console",
          "message": "Unexpected console statement (arrow function)",
          "severity": "warning",
          "fix": "This is in fc.property() test - likely false positive. Verify if actual console.log exists. May need eslint-disable comment for property-based tests."
        },
        {
          "file": "tests/properties/lightspeed-bigquery.properties.test.ts",
          "line": 23,
          "rule": "no-console",
          "message": "Unexpected console statement (arrow function)",
          "severity": "warning",
          "fix": "Same as above"
        },
        {
          "file": "src/pipeline/sync-pipeline.ts",
          "line": 72,
          "rule": "no-console",
          "message": "Unexpected console statement",
          "severity": "warning",
          "fix": "Replace console.error with proper logger (pino already in dependencies)"
        },
        {
          "file": "src/slack/bridge.ts",
          "line": 99,
          "rule": "no-console",
          "message": "Unexpected console statement",
          "severity": "warning",
          "fix": "Replace console.warn with proper logger"
        },
        {
          "file": "src/slack/bridge.ts",
          "line": 105,
          "rule": "no-console",
          "message": "Unexpected console statement",
          "severity": "warning",
          "fix": "Replace console.error with proper logger"
        },
        {
          "file": "src/slack/bridge.ts",
          "line": 181,
          "rule": "no-console",
          "message": "Unexpected console statement",
          "severity": "warning",
          "fix": "Replace console.error with proper logger"
        }
      ],
      "files": [
        "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/src/pipeline/sync-pipeline.ts",
        "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/src/slack/bridge.ts",
        "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/tests/properties/lightspeed-bigquery.properties.test.ts"
      ],
      "notes": "Replace console.* with pino logger. Test file warnings may be false positives from fast-check."
    }
  ],
  "execution_order": [
    {
      "step": 1,
      "group": "G1",
      "reason": "Quick wins, no dependencies, improves codebase immediately"
    },
    {
      "step": 2,
      "group": "G3",
      "reason": "Simple syntax fixes before major refactoring"
    },
    {
      "step": 3,
      "group": "G2",
      "reason": "Main refactoring work - decompose large functions into PO1-compliant modules"
    },
    {
      "step": 4,
      "group": "G4",
      "reason": "Type safety improvements after structure is stable"
    },
    {
      "step": 5,
      "group": "G5",
      "reason": "Final cleanup - logging infrastructure"
    }
  ],
  "dependencies": {
    "existing_packages": [
      "pino (logger already available)"
    ],
    "new_packages": []
  },
  "risk_assessment": {
    "level": "low",
    "concerns": [
      "G2 refactoring requires careful extraction to maintain behavior",
      "Need to preserve Slack signature verification logic exactly",
      "Redis pub/sub messages must maintain same format"
    ],
    "mitigation": [
      "Extract functions first, test, then split files",
      "Verify Slack integration still works after refactor",
      "Run existing tests after each group completion"
    ]
  },
  "testing_strategy": {
    "after_each_group": [
      "npm run lint (verify problems reduced)",
      "npm run type-check (ensure types still valid)"
    ],
    "after_g2_completion": [
      "npm test (run all tests)",
      "Manual Slack command testing if available"
    ],
    "final_validation": [
      "npm run lint -- should show 0 problems",
      "npm run build -- should succeed",
      "npm test -- all tests pass"
    ]
  },
  "handoff_to_execution": {
    "ready": true,
    "files_to_modify": [
      "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/src/pipeline/sync-pipeline.ts",
      "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/src/slack/bridge.ts",
      "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/tests/properties/lightspeed-bigquery.properties.test.ts"
    ],
    "files_to_create": [
      "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/src/slack/handlers/command-handlers.ts",
      "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/src/slack/middleware/slack-verify.ts",
      "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/src/slack/middleware/rate-limit.ts",
      "/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/backend/integration-service/src/utils/logger.ts"
    ],
    "start_with": "G1",
    "blockers": "none"
  }
}
