#!/usr/bin/env bash
# üê≥ Docker Environment Wrapper
# Liv Hana | Secure Secret Injection for Containers
# Loads secrets from 1Password/GCP Secret Manager before docker-compose

set -euo pipefail

ROOT="$(cd "$(dirname "$0")/.." && pwd)"
LOG_FILE="$ROOT/logs/docker_env_$(date +%Y%m%d_%H%M%S).log"

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
RED='\033[0;31m'
BOLD='\033[1m'
NC='\033[0m'

mkdir -p "$(dirname "$LOG_FILE")"

log() {
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] $*" | tee -a "$LOG_FILE"
}

printf "\n${BOLD}${CYAN}üê≥ DOCKER ENVIRONMENT WRAPPER${NC}\n"
printf "${CYAN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n\n"

# Check docker availability
if ! command -v docker >/dev/null 2>&1; then
  printf "${RED}‚ùå Docker not found${NC}\n"
  printf "${CYAN}Install via: brew install docker${NC}\n"
  exit 1
fi

if ! command -v docker-compose >/dev/null 2>&1; then
  printf "${RED}‚ùå docker-compose not found${NC}\n"
  printf "${CYAN}Install via: brew install docker-compose${NC}\n"
  exit 1
fi

printf "${GREEN}‚úÖ Docker tools available${NC}\n"
echo ""

# Load secrets from environment sources
printf "${CYAN}üîê Loading secrets...${NC}\n"

# GCP Project
export GCP_PROJECT_ID="${GCP_PROJECT_ID:-reggieanddrodispensary}"
log "GCP_PROJECT_ID=$GCP_PROJECT_ID"

# Load from 1Password if available
if command -v op >/dev/null 2>&1 && op whoami >/dev/null 2>&1; then
  printf "${GREEN}‚úÖ 1Password CLI authenticated${NC}\n"

  # Load critical secrets
  for secret_name in ANTHROPIC_API_KEY DEEPSEEK_API_KEY OPENAI_API_KEY JWT_SECRET; do
    if [[ -z "${!secret_name:-}" ]]; then
      SECRET_VALUE=$(op item get "$secret_name" --vault LivHana-Ops-Keys --reveal --fields credential 2>/dev/null || echo "")
      if [[ -n "$SECRET_VALUE" ]]; then
        export "$secret_name"="$SECRET_VALUE"
        printf "${GREEN}‚úÖ Loaded $secret_name from 1Password${NC}\n"
        log "Loaded $secret_name from 1Password"
      else
        printf "${YELLOW}‚ö†Ô∏è  $secret_name not found in 1Password${NC}\n"
      fi
    else
      printf "${GREEN}‚úÖ $secret_name already set${NC}\n"
    fi
  done
else
  printf "${YELLOW}‚ö†Ô∏è  1Password not authenticated${NC}\n"
  printf "${CYAN}Run: op signin${NC}\n"
fi

# Load from GCP Secret Manager if gcloud available
if command -v gcloud >/dev/null 2>&1; then
  printf "\n${CYAN}üîê Checking GCP Secret Manager...${NC}\n"

  for secret_name in SQUARE_ACCESS_TOKEN SQUARE_LOCATION_ID SLACK_SIGNING_SECRET; do
    if [[ -z "${!secret_name:-}" ]]; then
      SECRET_VALUE=$(gcloud secrets versions access latest --secret="$secret_name" --project="$GCP_PROJECT_ID" 2>/dev/null || echo "")
      if [[ -n "$SECRET_VALUE" ]]; then
        export "$secret_name"="$SECRET_VALUE"
        printf "${GREEN}‚úÖ Loaded $secret_name from GCP${NC}\n"
        log "Loaded $secret_name from GCP Secret Manager"
      fi
    fi
  done
else
  printf "${YELLOW}‚ö†Ô∏è  gcloud CLI not found - skipping GCP secrets${NC}\n"
fi

echo ""

# Export to .env file for docker-compose
ENV_FILE="$ROOT/.env.docker"
printf "${CYAN}üìù Writing environment to $ENV_FILE...${NC}\n"

cat > "$ENV_FILE" <<EOF
# Auto-generated by docker_env_wrapper.sh - $(date)
# DO NOT COMMIT - Contains secrets

GCP_PROJECT_ID=$GCP_PROJECT_ID
ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-}
OPENAI_API_KEY=${OPENAI_API_KEY:-}
JWT_SECRET=${JWT_SECRET:-}
SQUARE_ACCESS_TOKEN=${SQUARE_ACCESS_TOKEN:-}
SQUARE_LOCATION_ID=${SQUARE_LOCATION_ID:-}
SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET:-}

# Service configuration
NODE_ENV=${NODE_ENV:-development}
PORT=3005
REASONING_PORT=4002
VOICE_PORT=4001
REDIS_URL=${REDIS_URL:-redis://localhost:6379}
EOF

printf "${GREEN}‚úÖ Environment file written${NC}\n"
log "Environment file created: $ENV_FILE"

# Ensure .env.docker is in .gitignore
if ! grep -q "^\.env\.docker$" "$ROOT/.gitignore" 2>/dev/null; then
  echo ".env.docker" >> "$ROOT/.gitignore"
  printf "${GREEN}‚úÖ Added .env.docker to .gitignore${NC}\n"
fi

echo ""

# Run docker-compose with env file
DOCKER_CMD="${1:-up -d}"
printf "${CYAN}üöÄ Running: docker-compose --env-file .env.docker $DOCKER_CMD${NC}\n"
printf "${YELLOW}‚ö†Ô∏è  SCAFFOLD MODE - Command prepared but not executed${NC}\n"
echo ""

printf "${CYAN}To execute:${NC}\n"
echo "  cd $ROOT"
echo "  docker-compose --env-file .env.docker $DOCKER_CMD"
echo ""

printf "${GREEN}‚úÖ Docker environment wrapper ready${NC}\n"
printf "${CYAN}Full execution pending CODEX artifact delivery${NC}\n\n"

log "Docker env wrapper scaffold executed (secrets loaded, .env.docker created)"
