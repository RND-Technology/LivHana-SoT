{"ast":null,"code":"// Tier-1 JWT Auth Helper for Voice Mode\nimport axios from 'axios';\n\n// Get or generate a session JWT token\nexport const getSessionToken = () => {\n  // In production, this would fetch from your auth service\n  // For local dev, we'll use a placeholder that backend accepts\n  const token = localStorage.getItem('livhana_session_token');\n  if (token) return token;\n\n  // Generate a temporary dev token (backend should validate properly in production)\n  const devToken = 'dev_token_' + Date.now();\n  localStorage.setItem('livhana_session_token', devToken);\n  return devToken;\n};\n\n// Configure axios defaults\nexport const configureAxiosAuth = () => {\n  const token = getSessionToken();\n\n  // Set default auth header\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n  // Add request interceptor to ensure auth on all requests\n  axios.interceptors.request.use(config => {\n    if (!config.headers['Authorization']) {\n      config.headers['Authorization'] = `Bearer ${getSessionToken()}`;\n    }\n    // Add request ID for tracing\n    config.headers['x-request-id'] = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    return config;\n  }, error => Promise.reject(error));\n\n  // Add response interceptor for auth errors\n  axios.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      // Clear invalid token\n      localStorage.removeItem('livhana_session_token');\n      // In production, redirect to login\n      console.error('Authentication failed - please refresh');\n    }\n    return Promise.reject(error);\n  });\n};\n\n// Initialize auth on app load\nconfigureAxiosAuth();","map":{"version":3,"names":["axios","getSessionToken","token","localStorage","getItem","devToken","Date","now","setItem","configureAxiosAuth","defaults","headers","common","interceptors","request","use","config","Math","random","toString","substr","error","Promise","reject","response","_error$response","status","removeItem","console"],"sources":["/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/frontend/vibe-cockpit/src/utils/auth.js"],"sourcesContent":["// Tier-1 JWT Auth Helper for Voice Mode\nimport axios from 'axios';\n\n// Get or generate a session JWT token\nexport const getSessionToken = () => {\n  // In production, this would fetch from your auth service\n  // For local dev, we'll use a placeholder that backend accepts\n  const token = localStorage.getItem('livhana_session_token');\n  if (token) return token;\n  \n  // Generate a temporary dev token (backend should validate properly in production)\n  const devToken = 'dev_token_' + Date.now();\n  localStorage.setItem('livhana_session_token', devToken);\n  return devToken;\n};\n\n// Configure axios defaults\nexport const configureAxiosAuth = () => {\n  const token = getSessionToken();\n  \n  // Set default auth header\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  \n  // Add request interceptor to ensure auth on all requests\n  axios.interceptors.request.use(\n    (config) => {\n      if (!config.headers['Authorization']) {\n        config.headers['Authorization'] = `Bearer ${getSessionToken()}`;\n      }\n      // Add request ID for tracing\n      config.headers['x-request-id'] = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      return config;\n    },\n    (error) => Promise.reject(error)\n  );\n  \n  // Add response interceptor for auth errors\n  axios.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if (error.response?.status === 401) {\n        // Clear invalid token\n        localStorage.removeItem('livhana_session_token');\n        // In production, redirect to login\n        console.error('Authentication failed - please refresh');\n      }\n      return Promise.reject(error);\n    }\n  );\n};\n\n// Initialize auth on app load\nconfigureAxiosAuth();\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC;EACA;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,uBAAuB,CAAC;EAC3D,IAAIF,KAAK,EAAE,OAAOA,KAAK;;EAEvB;EACA,MAAMG,QAAQ,GAAG,YAAY,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EAC1CJ,YAAY,CAACK,OAAO,CAAC,uBAAuB,EAAEH,QAAQ,CAAC;EACvD,OAAOA,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;EACtC,MAAMP,KAAK,GAAGD,eAAe,CAAC,CAAC;;EAE/B;EACAD,KAAK,CAACU,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUV,KAAK,EAAE;;EAElE;EACAF,KAAK,CAACa,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3BC,MAAM,IAAK;IACV,IAAI,CAACA,MAAM,CAACL,OAAO,CAAC,eAAe,CAAC,EAAE;MACpCK,MAAM,CAACL,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUV,eAAe,CAAC,CAAC,EAAE;IACjE;IACA;IACAe,MAAM,CAACL,OAAO,CAAC,cAAc,CAAC,GAAG,OAAOL,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIU,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IAC/F,OAAOJ,MAAM;EACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;EAED;EACArB,KAAK,CAACa,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC5BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;IAAA,IAAAI,eAAA;IACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;MAClC;MACAvB,YAAY,CAACwB,UAAU,CAAC,uBAAuB,CAAC;MAChD;MACAC,OAAO,CAACP,KAAK,CAAC,wCAAwC,CAAC;IACzD;IACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CACF,CAAC;AACH,CAAC;;AAED;AACAZ,kBAAkB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}