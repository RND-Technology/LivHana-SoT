{"ast":null,"code":"var _jsxFileName = \"/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/frontend/vibe-cockpit/src/components/HealthBanner.js\";\nimport React from 'react';\nimport { Alert, AlertTitle, Box, Chip, Stack } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColor = status => {\n  switch (status) {\n    case 'healthy':\n      return 'success';\n    case 'degraded':\n      return 'warning';\n    case 'down':\n      return 'error';\n    default:\n      return 'info';\n  }\n};\nexport const HealthBanner = ({\n  voiceStatus,\n  reasoningStatus,\n  queueDepth\n}) => /*#__PURE__*/_jsxDEV(Alert, {\n  severity: statusColor(reasoningStatus),\n  sx: {\n    backgroundColor: '#111827',\n    color: '#E5E7EB'\n  },\n  \"data-testid\": \"health-banner\",\n  children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n    children: \"Voice Mode Service Health\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    spacing: 2,\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Chip, {\n        label: `Voice Service: ${voiceStatus}`,\n        color: statusColor(voiceStatus),\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Chip, {\n        label: `Reasoning Gateway: ${reasoningStatus}`,\n        color: statusColor(reasoningStatus),\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Chip, {\n        label: `Queue Depth: ${queueDepth !== null && queueDepth !== void 0 ? queueDepth : 'unknown'}`,\n        color: \"info\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n_c = HealthBanner;\nvar _c;\n$RefreshReg$(_c, \"HealthBanner\");","map":{"version":3,"names":["React","Alert","AlertTitle","Box","Chip","Stack","jsxDEV","_jsxDEV","statusColor","status","HealthBanner","voiceStatus","reasoningStatus","queueDepth","severity","sx","backgroundColor","color","children","fileName","_jsxFileName","lineNumber","columnNumber","direction","spacing","alignItems","label","variant","_c","$RefreshReg$"],"sources":["/Users/jesseniesen/LivHana-Trinity-Local/LivHana-SoT/frontend/vibe-cockpit/src/components/HealthBanner.js"],"sourcesContent":["import React from 'react';\nimport { Alert, AlertTitle, Box, Chip, Stack } from '@mui/material';\n\nconst statusColor = (status) => {\n  switch (status) {\n    case 'healthy':\n      return 'success';\n    case 'degraded':\n      return 'warning';\n    case 'down':\n      return 'error';\n    default:\n      return 'info';\n  }\n};\n\nexport const HealthBanner = ({ voiceStatus, reasoningStatus, queueDepth }) => (\n  <Alert severity={statusColor(reasoningStatus)} sx={{ backgroundColor: '#111827', color: '#E5E7EB' }} data-testid=\"health-banner\">\n    <AlertTitle>Voice Mode Service Health</AlertTitle>\n    <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n      <Box>\n        <Chip label={`Voice Service: ${voiceStatus}`} color={statusColor(voiceStatus)} variant=\"outlined\" />\n      </Box>\n      <Box>\n        <Chip label={`Reasoning Gateway: ${reasoningStatus}`} color={statusColor(reasoningStatus)} variant=\"outlined\" />\n      </Box>\n      <Box>\n        <Chip label={`Queue Depth: ${queueDepth ?? 'unknown'}`} color=\"info\" variant=\"outlined\" />\n      </Box>\n    </Stack>\n  </Alert>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,UAAU,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,WAAW,GAAIC,MAAM,IAAK;EAC9B,QAAQA,MAAM;IACZ,KAAK,SAAS;MACZ,OAAO,SAAS;IAClB,KAAK,UAAU;MACb,OAAO,SAAS;IAClB,KAAK,MAAM;MACT,OAAO,OAAO;IAChB;MACE,OAAO,MAAM;EACjB;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC,WAAW;EAAEC,eAAe;EAAEC;AAAW,CAAC,kBACvEN,OAAA,CAACN,KAAK;EAACa,QAAQ,EAAEN,WAAW,CAACI,eAAe,CAAE;EAACG,EAAE,EAAE;IAAEC,eAAe,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAE;EAAC,eAAY,eAAe;EAAAC,QAAA,gBAC9HX,OAAA,CAACL,UAAU;IAAAgB,QAAA,EAAC;EAAyB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC,eAClDf,OAAA,CAACF,KAAK;IAACkB,SAAS,EAAC,KAAK;IAACC,OAAO,EAAE,CAAE;IAACC,UAAU,EAAC,QAAQ;IAAAP,QAAA,gBACpDX,OAAA,CAACJ,GAAG;MAAAe,QAAA,eACFX,OAAA,CAACH,IAAI;QAACsB,KAAK,EAAE,kBAAkBf,WAAW,EAAG;QAACM,KAAK,EAAET,WAAW,CAACG,WAAW,CAAE;QAACgB,OAAO,EAAC;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjG,CAAC,eACNf,OAAA,CAACJ,GAAG;MAAAe,QAAA,eACFX,OAAA,CAACH,IAAI;QAACsB,KAAK,EAAE,sBAAsBd,eAAe,EAAG;QAACK,KAAK,EAAET,WAAW,CAACI,eAAe,CAAE;QAACe,OAAO,EAAC;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7G,CAAC,eACNf,OAAA,CAACJ,GAAG;MAAAe,QAAA,eACFX,OAAA,CAACH,IAAI;QAACsB,KAAK,EAAE,gBAAgBb,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAI,SAAS,EAAG;QAACI,KAAK,EAAC,MAAM;QAACU,OAAO,EAAC;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACR;AAACM,EAAA,GAfWlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}