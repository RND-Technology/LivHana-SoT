# ðŸŽ¤ VOICE MODE INTEGRATION RULES

## Service Separation (CRITICAL)
- **NEVER** mix ElevenLabs (voice) and DeepSeek (reasoning) in the same service
- Voice Service: [backend/voice-service](mdc:backend/voice-service) handles ONLY voice I/O
- Reasoning Gateway: [backend/reasoning-gateway](mdc:backend/reasoning-gateway) handles ONLY AI reasoning
- Communication: Redis queues with guardrails ([backend/common/queue](mdc:backend/common/queue))

## Frontend Integration
- Voice Panel: [frontend/vibe-cockpit/src/components/VoicePanel.jsx](mdc:frontend/vibe-cockpit/src/components/VoicePanel.jsx)
- Reasoning Hook: [frontend/vibe-cockpit/src/hooks/useReasoningJob.js](mdc:frontend/vibe-cockpit/src/hooks/useReasoningJob.js)
- Health Monitoring: Always show service status banners

## Docker Stack
- Use: [docker-compose.yml](mdc:docker-compose.yml) for unified deployment
- Services: voice-service, reasoning-gateway, redis, deepseek-stub
- Start: `docker-compose up -d`
- Health: Run [automation/scripts/check_service_health.sh](mdc:automation/scripts/check_service_health.sh)

## Testing Requirements
- Playwright MCP for E2E: [automation/tests/playwright](mdc:automation/tests/playwright)
- Unit tests required for all API endpoints
- Mock external services (ElevenLabs, DeepSeek) in tests
alwaysApply: true
---
