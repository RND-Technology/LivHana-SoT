
In ./infra/scripts/stop_voice_mode_stack.sh line 10:
pushd "$PROJECT_ROOT/infra/docker" >/dev/null
^-- SC2164 (warning): Use 'pushd ... || exit' or 'pushd ... || return' in case pushd fails.

Did you mean:
pushd "$PROJECT_ROOT/infra/docker" >/dev/null || exit


In ./infra/scripts/stop_voice_mode_stack.sh line 16:
popd >/dev/null
^-------------^ SC2164 (warning): Use 'popd ... || exit' or 'popd ... || return' in case popd fails.

Did you mean:
popd >/dev/null || exit


In ./infra/scripts/start_voice_mode_stack.sh line 10:
pushd "$PROJECT_ROOT/infra/docker" >/dev/null
^-- SC2164 (warning): Use 'pushd ... || exit' or 'pushd ... || return' in case pushd fails.

Did you mean:
pushd "$PROJECT_ROOT/infra/docker" >/dev/null || exit


In ./infra/scripts/start_voice_mode_stack.sh line 16:
popd >/dev/null
^-------------^ SC2164 (warning): Use 'popd ... || exit' or 'popd ... || return' in case popd fails.

Did you mean:
popd >/dev/null || exit


In ./frontend/vibe-cockpit/launch_verification.sh line 20:
  printf "${GREEN}OK${NC}\n"
         ^-----------------^ SC2059 (info): Don't use variables in the printf format string. Use printf '..%s..' "$foo".


In ./frontend/vibe-cockpit/launch_verification.sh line 22:
  printf "${RED}UNREACHABLE${NC}\n"
         ^------------------------^ SC2059 (info): Don't use variables in the printf format string. Use printf '..%s..' "$foo".


In ./frontend/vibe-cockpit/launch_verification.sh line 29:
  printf "${GREEN}OK${NC} (mode: ${MODE:-unknown})\n"
         ^-- SC2059 (info): Don't use variables in the printf format string. Use printf '..%s..' "$foo".


In ./frontend/vibe-cockpit/launch_verification.sh line 31:
  printf "${YELLOW}PENDING${NC} (service not responding)\n"
         ^-- SC2059 (info): Don't use variables in the printf format string. Use printf '..%s..' "$foo".


In ./frontend/vibe-cockpit/verify-bundle.sh line 19:
YELLOW='\033[1;33m'
^----^ SC2034 (warning): YELLOW appears unused. Verify use (or export if used externally).


In ./frontend/vibe-cockpit/verify-bundle.sh line 26:
if [ $? -ne 0 ]; then
     ^-- SC2181 (style): Check exit code directly with e.g. 'if ! mycmd;', not indirectly with $?.


In ./frontend/vibe-cockpit/verify-bundle.sh line 75:
CHUNK_COUNT=$(ls dist/assets/*.js 2>/dev/null | wc -l | tr -d ' ')
              ^-----------------------------^ SC2012 (info): Use find instead of ls to better handle non-alphanumeric filenames.


In ./frontend/vibe-cockpit/verify-bundle.sh line 83:
    if [ $size -gt 102400 ]; then
         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
    if [ "$size" -gt 102400 ]; then


In ./DEPLOY_EMPIRE_NOW.sh line 19:
export $(op document get "LivHana-SoT.env" --vault "LivHana-Ops-Keys" | xargs)
       ^-- SC2046 (warning): Quote this to prevent word splitting.


In ./DEPLOY_EMPIRE_NOW.sh line 37:
FRONTEND_PID=$!
^----------^ SC2034 (warning): FRONTEND_PID appears unused. Verify use (or export if used externally).


In ./DEPLOY_EMPIRE_NOW.sh line 53:
source venv/bin/activate
       ^---------------^ SC1091 (info): Not following: venv/bin/activate: openBinaryFile: does not exist (No such file or directory)


In ./DELETE_DUPLICATES.sh line 22:
read -p "Are you sure you want to proceed? (type 'YES' to confirm): " confirmation
^--^ SC2162 (info): read without -r will mangle backslashes.


In ./.claude/rate-limit-monitor.sh line 16:
ANTHROPIC_BALANCE_THRESHOLD=10  # Switch back to Cursor when balance < $10
^-------------------------^ SC2034 (warning): ANTHROPIC_BALANCE_THRESHOLD appears unused. Verify use (or export if used externally).


In ./.claude/rate-limit-monitor.sh line 56:
echo "  ✅ Monitor Anthropic balance ($100 prepaid)"
                                     ^-- SC1037 (error): Braces are required for positionals over 9, e.g. ${10}.


In ./.claude/rate-limit-monitor.sh line 57:
echo "  ✅ Auto-reload at $50 → $100 (configured)"
                         ^-- SC1037 (error): Braces are required for positionals over 9, e.g. ${10}.
                               ^-- SC1037 (error): Braces are required for positionals over 9, e.g. ${10}.


In ./.claude/auto-compact.sh line 99:
- Modified: $(git status --short | grep '^ M' | wc -l | tr -d ' ')
                                   ^--------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In ./.claude/auto-compact.sh line 100:
- Untracked: $(git status --short | grep '^??' | wc -l | tr -d ' ')
                                    ^--------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In ./.claude/update-ultimate-state.sh line 19:
GIT_STATUS=$(git status --porcelain 2>/dev/null | wc -l | tr -d ' ')
^--------^ SC2034 (warning): GIT_STATUS appears unused. Verify use (or export if used externally).


In ./.claude/update-ultimate-state.sh line 20:
GIT_AHEAD=$(git rev-list --count @{u}..HEAD 2>/dev/null || echo "0")
                                  ^-- SC1083 (warning): This { is literal. Check expression (missing ;/\n?) or quote it.
                                    ^-- SC1083 (warning): This } is literal. Check expression (missing ;/\n?) or quote it.


In ./backend/test-monitoring.sh line 46:
  body=$(echo "$response" | head -n -1)
  ^--^ SC2034 (warning): body appears unused. Verify use (or export if used externally).


In ./backend/test-monitoring.sh line 72:
    local value=$(echo "$response" | jq -r ".$json_key")
          ^---^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In ./backend/test-monitoring.sh line 85:
  local service=$1
        ^-----^ SC2034 (warning): service appears unused. Verify use (or export if used externally).


In ./backend/test-monitoring.sh line 95:
    metric_count=$(echo "$response" | grep "# HELP" | wc -l)
                                      ^-----------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In ./backend/test-monitoring.sh line 185:
for i in {1..100}; do
^-^ SC2034 (warning): i appears unused. Verify use (or export if used externally).


In ./backend/reasoning-gateway/scripts/setup-cron.sh line 45:
crontab -l > /tmp/crontab-backup-$(date +%Y%m%d-%H%M%S).txt 2>/dev/null || true
                                 ^--------------------^ SC2046 (warning): Quote this to prevent word splitting.


In ./docs/scripts_validate_Version2.sh line 11:
    export $(cat .env | xargs)
           ^-----------------^ SC2046 (warning): Quote this to prevent word splitting.


In ./docs/scripts_setup_Version2.sh line 11:
    export $(cat .env | xargs)
           ^-----------------^ SC2046 (warning): Quote this to prevent word splitting.


In ./.venv/lib/python3.13/site-packages/tqdm/completion.sh line 17:
    COMPREPLY=($(compgen -W       'CRITICAL FATAL ERROR WARN WARNING INFO DEBUG NOTSET' -- ${cur}))
               ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).
                                                                                           ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
    COMPREPLY=($(compgen -W       'CRITICAL FATAL ERROR WARN WARNING INFO DEBUG NOTSET' -- "${cur}"))


In ./.venv/lib/python3.13/site-packages/tqdm/completion.sh line 20:
    COMPREPLY=($(compgen -W '--ascii --bar_format --buf_size --bytes --colour --comppath --delay --delim --desc --disable --dynamic_ncols --help --initial --leave --lock_args --log --manpath --maxinterval --mininterval --miniters --ncols --nrows --null --position --postfix --smoothing --tee --total --unit --unit_divisor --unit_scale --update --update_to --version --write_bytes -h -v' -- ${cur}))
               ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).
                                                                                                                                                                                                                                                                                                                                                                                                      ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
    COMPREPLY=($(compgen -W '--ascii --bar_format --buf_size --bytes --colour --comppath --delay --delim --desc --disable --dynamic_ncols --help --initial --leave --lock_args --log --manpath --maxinterval --mininterval --miniters --ncols --nrows --null --position --postfix --smoothing --tee --total --unit --unit_divisor --unit_scale --update --update_to --version --write_bytes -h -v' -- "${cur}"))


In ./scripts/rpm-weekly-update.sh line 27:
find . -maxdepth 1 -type d -name "[0-9]-*.*.*.*.*.*" | sort | while read dir; do
                                                                    ^--^ SC2162 (info): read without -r will mangle backslashes.


In ./scripts/rpm-weekly-update.sh line 32:
  old_date=$(echo "$dir" | grep -oE '[0-9]{8}$' || echo "none")
  ^------^ SC2034 (warning): old_date appears unused. Verify use (or export if used externally).


In ./scripts/rpm-weekly-update.sh line 55:
ls -1 | grep -E "^[0-9]-" | head -10 | nl -w2 -s'. '
^-- SC2010 (warning): Don't use ls | grep. Use a glob or a for loop with a condition to allow non-alphanumeric filenames.


In ./scripts/TOUCH_ALL_FILES_NOW.sh line 19:
TOTAL=0
^---^ SC2034 (warning): TOTAL appears unused. Verify use (or export if used externally).


In ./scripts/TOUCH_ALL_FILES_NOW.sh line 32:
    -exec sh -c 'TOTAL=$((TOTAL + 1)); if [ $((TOTAL % 100)) -eq 0 ]; then echo "✅ Touched $TOTAL files..."; fi' \;
                ^-- SC2016 (info): Expressions don't expand in single quotes, use double quotes for that.


In ./scripts/OPTIMIZE_ENTIRE_REPO_NOW.sh line 14:
TIMESTAMP=$(date +%Y%m%d)
^-------^ SC2034 (warning): TIMESTAMP appears unused. Verify use (or export if used externally).


In ./scripts/rpm-check.sh line 20:
TOP_10=$(ls -1 | grep -E "^[0-9]-" | head -10)
         ^-- SC2010 (warning): Don't use ls | grep. Use a glob or a for loop with a condition to allow non-alphanumeric filenames.


In ./scripts/rpm-check.sh line 41:
MUST=$(ls -1 | grep -E "^[0-9]-.*\.0[0-9]{2}\." | wc -l | tr -d ' ')
       ^-- SC2010 (warning): Don't use ls | grep. Use a glob or a for loop with a condition to allow non-alphanumeric filenames.
               ^-- SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In ./scripts/rpm-check.sh line 42:
RESULTS=$(ls -1 | grep -E "^[0-9]-.*\.1[0-9]{2}\." | wc -l | tr -d ' ')
          ^-- SC2010 (warning): Don't use ls | grep. Use a glob or a for loop with a condition to allow non-alphanumeric filenames.
                  ^-- SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In ./scripts/rpm-check.sh line 43:
PROGRESS=$(ls -1 | grep -E "^[0-9]-.*\.2[0-9]{2}\." | wc -l | tr -d ' ')
           ^-- SC2010 (warning): Don't use ls | grep. Use a glob or a for loop with a condition to allow non-alphanumeric filenames.
                   ^-- SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In ./scripts/rpm-check.sh line 44:
BACKLOG=$(ls -1 | grep -E "^[0-9]-.*\.[8-9][0-9]{2}\." | wc -l | tr -d ' ')
          ^-- SC2010 (warning): Don't use ls | grep. Use a glob or a for loop with a condition to allow non-alphanumeric filenames.
                  ^-- SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In ./scripts/rpm-check.sh line 53:
WAITING=$(ls -1 | grep -E "^[0-9]-.*\.7[0-9]{2}\." | wc -l | tr -d ' ')
          ^-- SC2010 (warning): Don't use ls | grep. Use a glob or a for loop with a condition to allow non-alphanumeric filenames.
                  ^-- SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In ./scripts/rpm-check.sh line 56:
  ls -1 | grep -E "^[0-9]-.*\.7[0-9]{2}\." | sed 's/^/   - /'
  ^-- SC2010 (warning): Don't use ls | grep. Use a glob or a for loop with a condition to allow non-alphanumeric filenames.


In ./scripts/rpm-branch.sh line 29:
TOP_FOLDER=$(ls -1 | grep -E "^[0-9]-" | head -1)
             ^-- SC2010 (warning): Don't use ls | grep. Use a glob or a for loop with a condition to allow non-alphanumeric filenames.


In ./scripts/optimize-batch.sh line 32:
        echo "" >> "$file"
        ^----------------^ SC2129 (style): Consider using { cmd1; cmd2; } >> file instead of individual redirects.


In ./scripts/rpm-new-project.sh line 30:
read -p "   Enter AOM number (1-8): " AOM
^--^ SC2162 (info): read without -r will mangle backslashes.


In ./scripts/rpm-new-project.sh line 54:
read -p "   Enter COI code: " COI
^--^ SC2162 (info): read without -r will mangle backslashes.


In ./scripts/rpm-new-project.sh line 68:
read -p "   Enter RPM number (001-899): " RPM
^--^ SC2162 (info): read without -r will mangle backslashes.


In ./scripts/rpm-new-project.sh line 80:
read -p "   Enter action verb: " ACTION
^--^ SC2162 (info): read without -r will mangle backslashes.


In ./scripts/rpm-new-project.sh line 86:
read -p "   Enter context: " CONTEXT
^--^ SC2162 (info): read without -r will mangle backslashes.


In ./scripts/rpm-new-project.sh line 99:
read -p "   Proceed? (y/n): " CONFIRM
^--^ SC2162 (info): read without -r will mangle backslashes.


In ./scripts/rpm-new-project.sh line 159:
ls -1 | grep -E "^[0-9]-" | head -5 | nl -w2 -s'. '
^-- SC2010 (warning): Don't use ls | grep. Use a glob or a for loop with a condition to allow non-alphanumeric filenames.


In ./automation/scripts/check_trinity_status.sh line 7:
source "$(dirname "$0")/common.sh"
       ^-------------------------^ SC1091 (info): Not following: ./common.sh: openBinaryFile: does not exist (No such file or directory)


In ./automation/scripts/common.sh line 10:
TRINITY_ROOT="$(cd "$ROOT_DIR/.." && pwd)"
^----------^ SC2034 (warning): TRINITY_ROOT appears unused. Verify use (or export if used externally).


In ./automation/scripts/check_age_gate.sh line 9:
. "${SCRIPT_DIR}/lib_common.sh"
  ^---------------------------^ SC1091 (info): Not following: ./lib_common.sh: openBinaryFile: does not exist (No such file or directory)


In ./automation/scripts/update_sovereign_context.sh line 7:
source "$(dirname "$0")/common.sh"
       ^-------------------------^ SC1091 (info): Not following: ./common.sh: openBinaryFile: does not exist (No such file or directory)


In ./automation/scripts/check_memory_snapshot.sh line 9:
. "${SCRIPT_DIR}/lib_common.sh"
  ^---------------------------^ SC1091 (info): Not following: ./lib_common.sh: openBinaryFile: does not exist (No such file or directory)


In ./automation/scripts/lib_common.sh line 28:
    printf '"%s":"%s"' "$(echo "$k" | sed 's/"/\\"/g')" "$(echo "$v" | sed 's/"/\\"/g')"
                          ^-------------------------^ SC2001 (style): See if you can use ${variable//search/replace} instead.
                                                           ^-------------------------^ SC2001 (style): See if you can use ${variable//search/replace} instead.


In ./automation/scripts/setup_version2.sh line 13:
    source .env
           ^--^ SC1094 (warning): Parsing of sourced file failed. Ignoring it.


In ./automation/scripts/prep_ingestion_data.sh line 7:
source "$(dirname "$0")/common.sh"
       ^-------------------------^ SC1091 (info): Not following: ./common.sh: openBinaryFile: does not exist (No such file or directory)


In ./automation/scripts/validate_context_integrity.sh line 7:
source "$(dirname "$0")/common.sh"
       ^-------------------------^ SC1091 (info): Not following: ./common.sh: openBinaryFile: does not exist (No such file or directory)


In ./automation/scripts/validate_sovereign_compliance.sh line 7:
source "$(dirname "$0")/common.sh"
       ^-------------------------^ SC1091 (info): Not following: ./common.sh: openBinaryFile: does not exist (No such file or directory)


In ./automation/scripts/check_router_health.sh line 9:
. "${SCRIPT_DIR}/lib_common.sh"
  ^---------------------------^ SC1091 (info): Not following: ./lib_common.sh: openBinaryFile: does not exist (No such file or directory)


In ./automation/scripts/check_workflow_inventory.sh line 9:
. "${SCRIPT_DIR}/lib_common.sh"
  ^---------------------------^ SC1091 (info): Not following: ./lib_common.sh: openBinaryFile: does not exist (No such file or directory)


In ./automation/scr